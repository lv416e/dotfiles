# =============================================================================
# Mise Configuration - Development Tools & Environment Management
# =============================================================================
# Docs: https://mise.jdx.dev/

[tools]
# Language runtimes
node = "lts"           # Node.js LTS version
python = "3.13"        # Python 3.13 (stable)
go = "latest"          # Latest Go version
ruby = "3.3"           # Ruby 3.3
java = "temurin-11"    # Java 11 (Temurin LTS, supported until 2029)
rust = "stable"        # Rust stable (managed by mise instead of rustup)

# npm global packages
"npm:@anthropic-ai/claude-code" = "latest"  # Claude Code CLI
"npm:@google/gemini-cli" = "latest"         # Gemini CLI
"npm:@openai/codex" = "latest"              # OpenAI Codex CLI
"npm:@slidev/cli" = "latest"                # Slidev presentation tool
"npm:git-open" = "latest"                   # Open GitHub repo from terminal
"npm:ccusage" = "latest"                    # Claude Code usage tracker

# Python tools (pipx/uvx)
"pipx:claude-monitor" = "latest"            # Claude Code usage monitor

# Modern shell (experimental)
"cargo:nu" = "latest"                       # Nushell - modern shell with structured data

# Git hooks and security
"go:github.com/evilmartians/lefthook" = "latest"     # Modern Git hooks manager
"go:github.com/zricethezav/gitleaks/v8" = "latest"  # Secret detection tool (correct module path)

[settings]
experimental = true

# =============================================================================
# Environment Variables
# =============================================================================
# Shared environment variables for tasks

[env]
CACHE_DIR = "~/.cache"
DOTFILES_DIR = "~/.local/share/chezmoi"

# =============================================================================
# Task Runner - Development Workflow Automation
# =============================================================================
# Run: mise <task> or mise run <task>
# List: mise tasks
#
# Naming Convention:
#   [category]-[action]  (e.g., sys-update, dot-apply)
#
# Categories:
#   sys-  : System maintenance (update, clean, check)
#   dot-  : Dotfiles management (apply, backup, diff)
#   tool- : Tool management (install, outdated)

# --- System Maintenance ---

[tasks.sys-update]
description = "[sys] Update all tools and prune old versions"
alias = "up"
run = ["mise upgrade", "mise prune -y"]

[tasks.sys-clean]
description = "[sys] Clean all caches (sheldon, zsh, mise)"
alias = "c"
run = [
  "rm -rf $CACHE_DIR/sheldon",
  "rm -rf ~/.zcompdump*",
  "mise cache clear"
]

[tasks.sys-check]
description = "[sys] Verify mise installation and config"
alias = "chk"
run = "mise doctor"

[tasks.sys-health]
description = "[sys] Run comprehensive health checks"
alias = "h"
run = [
  "echo '=== Mise ==='",
  "mise doctor",
  "echo '\n=== Homebrew ==='",
  "brew doctor",
  "echo '\n=== Chezmoi ==='",
  "chezmoi verify",
]

[tasks.sys-status]
description = "[sys] Show system status (tools, caches)"
alias = "st"
run = [
  "echo '=== Installed Tools ==='",
  "mise ls",
  "echo '\n=== Cache Status ==='",
  "du -sh $CACHE_DIR/sheldon 2>/dev/null || echo 'No sheldon cache'",
  "du -sh ~/.zcompdump* 2>/dev/null || echo 'No zsh cache'",
]

[tasks.sys-bench]
description = "[sys] Benchmark zsh startup time (10x)"
alias = "b"
run = "bash -c 'for i in {1..10}; do /usr/bin/time -p zsh -i -c exit 2>&1 | /usr/bin/grep real; done'"

# --- Dotfiles Management ---

[tasks.dot-apply]
description = "[dot] Apply dotfiles to system"
alias = "a"
run = "chezmoi apply"

[tasks.dot-backup]
description = "[dot] Push dotfiles to remote repo"
alias = "bak"
run = "chezmoi git -- push"

[tasks.dot-status]
description = "[dot] Show git status of dotfiles"
alias = "s"
run = "chezmoi git -- status"

[tasks.dot-diff]
description = "[dot] Show diff between source and applied"
alias = "d"
run = "chezmoi diff"

# --- Tool Management ---

[tasks.tool-install]
description = "[tool] Install all tools from config"
alias = "i"
run = "mise install"

[tasks.tool-outdated]
description = "[tool] Check for outdated tools"
alias = "out"
run = "mise outdated"

# --- 1Password & Secrets Management ---
# Note: Use 'ops' shell function to sign in (defined in zsh functions)

[tasks.op-status]
description = "[1pass] Check 1Password authentication status"
alias = "opst"
run = "op whoami || echo 'Not signed in. Run: ops'"

[tasks.op-vaults]
description = "[1pass] List all vaults"
alias = "opv"
run = "op vault list"

[tasks.op-items]
description = "[1pass] List items in vault"
alias = "opi"
run = "op item list --vault {{ .onepassword.vault }}"

[tasks.op-get]
description = "[1pass] Get item details (usage: mise op-get <item-name>)"
alias = "opg"
run = "op item get \"$1\" --vault {{ .onepassword.vault }}"

[tasks.secrets-backup-age-key]
description = "[secrets] Backup age key to 1Password"
alias = "sbk"
run = """
echo "Backing up age key to 1Password..."
op whoami > /dev/null || { echo "❌ Not signed in. Run: ops"; exit 1; }

if [ ! -f ~/.config/chezmoi/key.txt ]; then
  echo "❌ Age key not found at ~/.config/chezmoi/key.txt"
  exit 1
fi

# Check if item already exists
if op item get "chezmoi-age-key" --vault {{ .onepassword.vault }} > /dev/null 2>&1; then
  echo "⚠️  'chezmoi-age-key' already exists in 1Password"
  echo "   Delete it first with: op item delete 'chezmoi-age-key' --vault {{ .onepassword.vault }}"
  exit 1
fi

# Create secure note with age key
op item create --category="Secure Note" \
  --title="chezmoi-age-key" \
  --vault={{ .onepassword.vault }} \
  notesPlain="$(cat ~/.config/chezmoi/key.txt)"

echo "✅ Age key backed up to 1Password as 'chezmoi-age-key'"
echo "   Vault: {{ .onepassword.vault }}"
echo ""
echo "To restore on a new machine:"
echo "  op item get 'chezmoi-age-key' --fields notesPlain --vault {{ .onepassword.vault }} > ~/.config/chezmoi/key.txt"
echo "  chmod 600 ~/.config/chezmoi/key.txt"
"""

[tasks.secrets-restore-age-key]
description = "[secrets] Restore age key from 1Password"
alias = "srk"
run = """
echo "Restoring age key from 1Password..."
op whoami > /dev/null || { echo "❌ Not signed in. Run: ops"; exit 1; }

if [ -f ~/.config/chezmoi/key.txt ]; then
  echo "⚠️  Age key already exists at ~/.config/chezmoi/key.txt"
  echo "   Backup: cp ~/.config/chezmoi/key.txt ~/.config/chezmoi/key.txt.backup"
  read -p "   Overwrite existing key? (y/N): " confirm
  if [ "$confirm" != "y" ]; then
    echo "❌ Cancelled"
    exit 1
  fi
fi

mkdir -p ~/.config/chezmoi

# Restore from 1Password
op item get "chezmoi-age-key" --fields notesPlain --vault {{ .onepassword.vault }} > ~/.config/chezmoi/key.txt
chmod 600 ~/.config/chezmoi/key.txt

echo "✅ Age key restored from 1Password"
echo "   Location: ~/.config/chezmoi/key.txt"
echo "   Permissions: 600"
echo ""
echo "Verify with: mise secrets-verify"
"""

[tasks.secrets-test]
description = "[secrets] Test template with onepasswordRead"
alias = "sct"
run = """
echo "Testing 1Password template integration..."
op whoami > /dev/null || { echo "❌ Not signed in. Run: ops"; exit 1; }
echo "✅ 1Password authenticated"
echo "\nVaults available:"
op vault list
echo "\nTest reading a secret (replace with your actual op:// path):"
echo "Example: chezmoi execute-template '{{ "{{" }} onepasswordRead \"op://Personal/API/password\" {{ "}}" }}'"
"""

[tasks.secrets-list]
description = "[secrets] List age-encrypted files in chezmoi"
alias = "sl"
run = "chezmoi managed | grep -E '\\.age$|encrypted' || echo 'No encrypted files found'"

[tasks.secrets-add]
description = "[secrets] Add file with age encryption (usage: mise secrets-add <file>)"
alias = "sa"
run = "chezmoi add --encrypt \"$1\""

[tasks.secrets-verify]
description = "[secrets] Verify age encryption setup"
alias = "sv"
run = """
echo "=== Age Key Status ==="
if [ -f ~/.config/chezmoi/key.txt ]; then
  echo "✅ Age key exists: ~/.config/chezmoi/key.txt"
  echo "Public key: $(grep -A1 'public key:' ~/.config/chezmoi/key.txt 2>/dev/null || echo 'age14t9x0zwv2adeujgjryk33s4f7wcxmsn7y7ws65hz7fs80fw9rfeqk8a4rg')"
else
  echo "❌ Age key not found. Generate with: chezmoi age-keygen --output=~/.config/chezmoi/key.txt"
fi

echo "\n=== 1Password Status ==="
op whoami > /dev/null 2>&1 && echo "✅ Signed in to 1Password" || echo "❌ Not signed in. Run: mise op-signin"

echo "\n=== Chezmoi Encryption Config ==="
grep -A3 'encryption = "age"' ~/.config/chezmoi/chezmoi.toml || echo "❌ Age encryption not configured in chezmoi"
"""

# --- Workflows (Complex Operations) ---

[tasks.sync]
description = "[workflow] Full sync: apply → update → clean"
alias = "sy"
depends = ["dot-apply", "sys-update", "sys-clean"]

[tasks.fresh]
description = "[workflow] Fresh start: clean → apply → update"
alias = "f"
run = [
  "mise run sys-clean",
  "mise run dot-apply",
  "mise run sys-update",
]
