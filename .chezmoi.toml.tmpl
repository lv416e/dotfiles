# chezmoi configuration template
# Interactive setup on first init - prompts appear only once
# Non-interactive in Codespaces/containers for automated provisioning

# =============================================================================
# Environment Detection
# =============================================================================
{{- $isCodespaces := env "CODESPACES" | not | not -}}
{{- $isContainer := or (env "CONTAINER") (env "REMOTE_CONTAINERS") | not | not -}}
{{- $isCI := env "CI" | not | not -}}
{{- $isNonInteractive := or $isCodespaces $isCI -}}

# =============================================================================
# User Information
# =============================================================================
# In non-interactive environments, use defaults; otherwise prompt
# Safely get git config values (returns empty string if not set)
{{- $gitEmail := "" -}}
{{- $gitName := "" -}}
{{- if lookPath "git" -}}
{{-   $gitEmailOutput := output "sh" "-c" "git config --global user.email 2>/dev/null || true" | trim -}}
{{-   $gitNameOutput := output "sh" "-c" "git config --global user.name 2>/dev/null || true" | trim -}}
{{-   if ne $gitEmailOutput "" -}}
{{-     $gitEmail = $gitEmailOutput -}}
{{-   end -}}
{{-   if ne $gitNameOutput "" -}}
{{-     $gitName = $gitNameOutput -}}
{{-   end -}}
{{- end -}}

{{- $email := "" -}}
{{- if $isNonInteractive -}}
{{-   $email = env "EMAIL" | default $gitEmail | default "devcontainer@localhost" -}}
{{- else -}}
{{-   $email = promptStringOnce . "email" "Email address" (env "EMAIL" | default $gitEmail) -}}
{{- end -}}

{{- $githubUser := "" -}}
{{- if $isNonInteractive -}}
{{-   $githubUser = env "GITHUB_USER" | default (env "USER") | default "vscode" -}}
{{- else -}}
{{-   $githubUser = promptStringOnce . "github_user" "GitHub username" "" -}}
{{- end -}}

# =============================================================================
# 1Password Configuration
# =============================================================================
# Disable in non-interactive environments (use GitHub Secrets instead)
{{- $vaultName := "Personal" -}}
{{- $useGithubToken := false -}}
{{- $githubTokenItem := "GitHub Classic PAT" -}}

{{- if not $isNonInteractive -}}
{{-   $vaultName = promptStringOnce . "onepassword.vault" "1Password vault name" "Personal" -}}
{{-   $useGithubToken = promptBoolOnce . "use_github_token" "Fetch GitHub token from 1Password" false -}}
{{-   $githubTokenItem = promptStringOnce . "github_token_item" "1Password item name for GitHub token" "GitHub Classic PAT" -}}
{{- end -}}

# =============================================================================
# Age Encryption Configuration
# =============================================================================
# Disable in non-interactive environments
{{- $useAge := false -}}
{{- $ageRecipient := "" -}}
{{- if not $isNonInteractive -}}
{{-   $useAge = promptBoolOnce . "use_age_encryption" "Enable age encryption for sensitive files" false -}}
{{-   if $useAge -}}
{{-     $ageRecipient = promptStringOnce . "age.recipient" "Your age public key (run: chezmoi age-keygen)" "" -}}
{{-   end -}}
{{- end -}}

# =============================================================================
# Zsh Configuration
# =============================================================================
{{- $zshVariant := "monolithic" -}}
{{- $multiplexer := "tmux" -}}
{{- if not $isNonInteractive -}}
{{-   $zshVariant = promptChoice "Zsh config style" (list "monolithic" "modular") "monolithic" -}}
{{-   $multiplexer = promptChoice "Terminal multiplexer" (list "tmux" "zellij") "tmux" -}}
{{- end -}}

# =============================================================================
# Optional Features
# =============================================================================
{{- $useDifftastic := true -}}
{{- if not $isNonInteractive -}}
{{-   $useDifftastic = promptBoolOnce . "use_difftastic" "Enable difftastic git diff integration" true -}}
{{- end -}}

# =============================================================================
# chezmoi Configuration
# =============================================================================

# CRITICAL: Set sourceDir for Codespaces compatibility
# Codespaces clones dotfiles to /workspaces/.codespaces/.persistedshare/dotfiles
sourceDir = {{ .chezmoi.sourceDir | quote }}

# Age encryption configuration (must be at top level, before [data])
{{- if and $useAge (ne $ageRecipient "") }}
encryption = "age"

[age]
    identity = "{{ .chezmoi.homeDir }}/.config/chezmoi/key.txt"
    recipient = {{ $ageRecipient | quote }}
{{- end }}

[data]
    # Environment detection flags
    is_codespaces = {{ $isCodespaces }}
    is_container = {{ $isContainer }}
    is_ci = {{ $isCI }}
    is_non_interactive = {{ $isNonInteractive }}

    # OS and architecture information
    os = {{ .chezmoi.os | quote }}
    arch = {{ .chezmoi.arch | quote }}

    # User information
    name = {{ $gitName | default "DevContainer User" | quote }}
    email = {{ $email | quote }}
    github_user = {{ $githubUser | quote }}
    github_token = "{{ if $useGithubToken }}{{ or (env "GITHUB_TOKEN") (onepasswordRead (printf "op://%s/%s/credential" $vaultName $githubTokenItem)) "" }}{{ else }}{{ env "GITHUB_TOKEN" }}{{ end }}"

[data.zsh]
    variant = {{ $zshVariant | quote }}
    multiplexer = {{ $multiplexer | quote }}

[data.difftastic]
    enabled = {{ $useDifftastic }}

[data.onepassword]
    vault = {{ $vaultName | quote }}
    github_token_item = {{ $githubTokenItem | quote }}

[onepassword]
    mode = "account"

[edit]
    command = "nvim"
    apply = true

[add]
    secrets = "error"

[git]
    autoCommit = true
    autoPush = true

[merge]
    command = "nvim"
    args = ["-d", "{{ "{{ .Destination }}" }}", "{{ "{{ .Source }}" }}"]
