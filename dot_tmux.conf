unbind C-b
set -g prefix C-g
bind C-g send-prefix

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

bind \\ split-window -h
bind - split-window -v

set -g display-panes-time 2000
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection

set -s escape-time 0
set-option -g history-limit 5000
set-option -g base-index 1
set-option -g mouse on  

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h resize-pane -L 10
bind -r C-l resize-pane -R 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10

## git
bg_blue="#[fg=colour0,bg=colour12]"
bg_lightblue="#[fg=colour7,bg=colour33]"
fg_blue="#[fg=colour27,bg=colour16]"
fg_red="#[fg=colour198,bg=colour16]"

# if git_status=$(cd $1 && git status 2>/dev/null ); then
#   git_branch="$(git branch --contains| awk 'NR==1 {print $2}')"
#
#   # release/master で作業しているか
#   if [[ $git_branch = "release" || $git_branch = "master" ]]; then
#     fg_git=$fg_red
#   else
#     fg_git=$fg_blue
#   fi
#
#   # git status コマンドの出力テキストからステータスを判定
#   case $git_status in
#     *Changes\ not\ staged* ) git_status="+" ;;
#     *Changes\ to\ be\ committed* ) git_status="++" ;; 
#     *currently\ editing\ a\ commit\ while\ rebasing* ) git_status="in progress(rebase)" ;;
#     *interactive\ rebase\ in\ progress* ) git_status="in progressrebase)" ;;
#     *currently\ cherry-picking\ commit* ) git_status="in progress(cherry-pick)" ;;
#     * ) git_status="---" ;;
#   esac
#
#   if [[ $git_status == "---" ]]; then
#     fg_git_status=$fg_blue
#   else
#     fg_git_status=$fg_red
#   fi
# else
#   git_branch="---"
#   fg_git=$fg_blue
#   git_status="---"
#   fg_git_status=$fg_blue
# fi
#
# ## node のバージョン
# #node_version=$(node -v)
#
# ## package.json の情報を収集
# #if package_name=$(cd $1 && ls package.json 2>/dev/null ); then
# #  package_name="$(node -e "console.log(require('$1/package.json')['name'])")"
# #else
# #  package_name="---"
# #fi
#
# ## 連結して出力
# echo "$bg_blue NODE $fg_blue $node_version $bg_blue PACKAGE $fg_blue $package_name $bg_lightblue BRANCH $fg_git $git_branch $bg_lightblue STATUS $fg_git_status $git_status "
