#!/usr/bin/env bash
set -euo pipefail

ANIMALS=(
  "tiger" "leopard" "lion" "panther" "jaguar" "cheetah"
  "wolf" "fox" "bear" "eagle" "hawk" "falcon" "giraffe"
  "dolphin" "whale" "shark" "octopus" "turtle" "seal"
  "cobra" "viper" "dragon" "phoenix" "griffin" "unicorn"
)
generate_random_name() {
  local base="${ANIMALS[$RANDOM % ${#ANIMALS[@]}]}"
  local suffix=$((RANDOM % 10))
  echo "${base}-${suffix}"
}

# Window name
if [[ -n "${1:-}" ]]; then
  WINDOW="$1"
  ALLOW_DUPLICATE="${ALLOW_DUPLICATE:-0}"
else
  WINDOW=$(generate_random_name)
  ALLOW_DUPLICATE=1
fi

SESSION_DEFAULT="desk"
LEFT_DIR="${LEFT_DIR:-$HOME/Documents}"
FORCE="${FORCE:-0}"

LAYOUT='776f,227x76,0,0{112x76,0,0[112x57,0,0,39,112x18,0,58,43],114x76,113,0[114x32,113,0,40,114x24,113,33,41,114x18,113,58{57x18,113,58,42,56x18,171,58,44}]}'

# Session
if [[ -n "${TMUX-}" ]]; then
  SESSION="$(tmux display -p '#S')"
else
  SESSION="$SESSION_DEFAULT"
  tmux has-session -t "$SESSION" 2>/dev/null || tmux new-session -d -s "$SESSION" -n tmp
fi

# Duplicate handling
if [[ "$ALLOW_DUPLICATE" == "0" ]]; then
  EXIST_ID="$(tmux list-windows -t "$SESSION" -F '#{window_name} #{window_id}' \
    | awk -v w="$WINDOW" '$1==w{print $2}')"
  if [[ -n "${EXIST_ID:-}" ]]; then
    if [[ "$FORCE" == "1" ]]; then
      tmux kill-window -t "$EXIST_ID"
    else
      COUNT=2
      ORIGINAL_WINDOW="$WINDOW"
      while tmux list-windows -t "$SESSION" -F '#{window_name}' | grep -q "^${WINDOW}$"; do
        WINDOW="${ORIGINAL_WINDOW}-${COUNT}"
        COUNT=$((COUNT + 1))
      done
      echo "Window '$ORIGINAL_WINDOW' exists. Creating as '$WINDOW' instead." >&2
    fi
  fi
fi

# Create window
echo "creating window: $WINDOW" >&2
WINID="$(tmux new-window -P -F '#{window_id}' -t "${SESSION}:" -n "$WINDOW")"

# Create 6-pane structure
tmux split-window -h          -t "${WINID}.0"
tmux select-pane              -t "${WINID}.0"
tmux split-window -v -p 24    -t "${WINID}.0"
tmux select-pane              -t "${WINID}.1"
tmux split-window -v -p 58    -t "${WINID}.1"
tmux select-pane              -t "${WINID}.1"
tmux split-window -v -p 33    -t "${WINID}.1"
tmux select-pane              -t "${WINID}.4"
tmux split-window -h -p 50    -t "${WINID}.4"

# Fix layout
tmux select-layout -t "${WINID}" "${LAYOUT}"
sleep 0.1

# Identify panes by coordinates
LEFTS=(); RIGHTS=()
while IFS= read -r line; do
  read -r id x y <<<"$line"
  if [[ "$x" -eq 0 ]]; then
    LEFTS+=("$id $x $y")
  else
    RIGHTS+=("$id $x $y")
  fi
done < <(tmux list-panes -t "${WINID}" -F '#{pane_id} #{pane_left} #{pane_top}')

# Left column: top/bottom
L_TOP=$(printf '%s\n' "${LEFTS[@]}"  | sort -nk3 | sed -n '1p' | awk '{print $1}')
L_BOT=$(printf '%s\n' "${LEFTS[@]}"  | sort -nk3 | sed -n '2p' | awk '{print $1}')

# Right column: unique top values
UNIQUE_TOPS=$(printf '%s\n' "${RIGHTS[@]}" | awk '{print $3}' | sort -nu)
TOP1=$(echo "$UNIQUE_TOPS" | sed -n '1p')
TOP2=$(echo "$UNIQUE_TOPS" | sed -n '2p')
TOP3=$(echo "$UNIQUE_TOPS" | sed -n '3p')

R_TOP=$(printf '%s\n' "${RIGHTS[@]}" | awk -v t="$TOP1" '$3==t{print $1}')
R_MID=$(printf '%s\n' "${RIGHTS[@]}" | awk -v t="$TOP2" '$3==t{print $1}')

R_BOTTOM_PANES=$(printf '%s\n' "${RIGHTS[@]}" | awk -v t="$TOP3" '$3==t')
R_BLEFT=$(echo "$R_BOTTOM_PANES" | sort -nk2 | sed -n '1p' | awk '{print $1}')
R_BRIGHT=$(echo "$R_BOTTOM_PANES" | sort -nk2 | sed -n '2p' | awk '{print $1}')

# Commands
tmux respawn-pane -k -t "$L_TOP" "cd \"${LEFT_DIR}\" && exec zsh"
tmux respawn-pane -k -t "$L_BOT" "cd \"${LEFT_DIR}\" && exec zsh"

tmux respawn-pane -k -t "$R_TOP" "watch -n 10 \"ccusage daily --since \$(date -v -3d +%Y%m%d) --no-color\""
tmux respawn-pane -k -t "$R_MID" "claude-monitor --plan max5"

tmux respawn-pane -k -t "$R_BRIGHT" "tty-clock -sc"
tmux respawn-pane -k -t "$R_BLEFT" "btm"

# Reapply layout
tmux select-layout -t "${WINID}" "${LAYOUT}"

# Focus top-left
tmux select-window -t "${WINID}"
tmux select-pane -t "$L_TOP"

# NOTE: Removed double respawn optimization
# Previous behavior respawned left panes twice, causing 2x zsh initialization
# First respawn (line 106-107): cd LEFT_DIR && exec zsh
# Second respawn (removed): default shell, loses LEFT_DIR context
# Result: 50% faster left pane startup

# Attach if not in tmux
if [[ -z "${TMUX-}" ]]; then tmux attach -t "$SESSION"; fi